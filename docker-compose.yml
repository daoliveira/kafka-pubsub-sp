version: '3.4'

services:
  dynamodb:
    image: amazon/dynamodb-local

  dynamodb-spring-data-rest-sb:
    image: d4oliveira/dynamodb-spring-data-rest-sb
    ports:
      - 8080:8080
    environment: 
      AMAZON_DYNAMODB_ENDPOINT: http://dynamodb:8000
    depends_on:
      - dynamodb

  zoo1:
    image: zookeeper:3.4.9
    hostname: zoo1
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - ./zk-single-kafka-single/zoo1/data:/data
      - ./zk-single-kafka-single/zoo1/datalog:/datalog

  kafka1:
    image: confluentinc/cp-kafka:5.5.0
    hostname: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://kafka1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./zk-single-kafka-single/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zoo1

  kafka-pubsub-sb:
    image: kafka-pubsub-sb
    build: .
    environment: 
      SPRING_KAFKA_PRODUCER_BOOTSTRAP-SERVERS: http://kafka1:9092
      PRODUCT_PRODUCING_DELAY: 5000
      SPRING_KAFKA_CONSUMER_BOOTSTRAP-SERVERS: http://kafka1:9092
      PRODUCT_REST_ENDPOINT: http://dynamodb-spring-data-rest-sb:8080/products
    depends_on: 
      - dynamodb-spring-data-rest-sb
      - kafka1
